{"version":3,"file":"static/js/416.e8d72fc1.chunk.js","mappings":"gOA+DA,UA1DoB,WAClB,IAAAA,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA4BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAuB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEY,GAFZF,EAAAC,KAAA,EAEtBJ,EAAQV,EAAagB,IAAI,SACpB,CAADH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBACS,OAAnBzB,GAAa,GAAMqB,EAAAE,KAAA,GACOG,EAAAA,EAAAA,IAAiBR,GAAO,KAAD,EAAAC,EAAAE,EAAAM,KAAzCP,EAAOD,EAAPC,QACRhB,EAAUgB,GAASC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEnBQ,QAAQC,IAAIT,EAAAO,GAAMG,SAAS,QAEP,OAFOV,EAAAC,KAAA,GAE3BtB,GAAa,GAAOqB,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAhB,EAAA,yBAEvB,kBAZ4B,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAa7BtB,GACF,GAAG,CAACL,EAAcR,IAUlB,OACEoC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAAC,SAAA,EACNF,EAAAA,EAAAA,MAAA,QAAMG,SAVW,SAAAC,GACnBA,EAAEC,iBACGD,EAAEE,OAAO,GAAGC,OACfC,MAAM,mCAERJ,EAAEE,OAAO,GAAGC,OAASlC,EAAgB,CAAES,MAAOsB,EAAEE,OAAO,GAAGC,OAC5D,EAIiCL,SAAA,EAC3BO,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEdJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQR,SAAC,cAEvBvC,IAAa8C,EAAAA,EAAAA,KAACK,EAAAA,EAAY,CAAAZ,SAAC,eAC3BnC,IACC0C,EAAAA,EAAAA,KAAA,MAAAP,SACGnC,EAAOgD,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAE,OACtBT,EAAAA,EAAAA,KAAA,MAAAP,UACEO,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,MAAO9C,EAAU+C,GAAE,GAAAC,OAAKJ,GAAKhB,SAChCe,KAFIC,EAIJ,QAMjB,C","sources":["pages/MovieSearch.jsx"],"sourcesContent":["import { getMoviesByQuery } from 'routes/movies';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Wrapper, StyledLoader } from './page.styled';\n\nconst MovieSearch = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMoviesByQueryFromApi = async () => {\n      try {\n        const query = searchParams.get('query');\n        if (!query) return;\n        setIsLoading(true);\n        const { results } = await getMoviesByQuery(query);\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMoviesByQueryFromApi();\n  }, [searchParams, setIsLoading]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!e.target[0].value) {\n      alert('Please enter your search query!');\n    }\n    e.target[0].value && setSearchParams({ query: e.target[0].value });\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <StyledLoader>Loading...</StyledLoader>}\n      {movies && (\n        <ul>\n          {movies.map(({ title, id }) => (\n            <li key={id}>\n              <Link state={location} to={`${id}`}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MovieSearch;\n"],"names":["_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","getMoviesByQueryFromApi","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","_yield$getMoviesByQue","results","_context","prev","next","get","abrupt","getMoviesByQuery","sent","t0","console","log","message","finish","stop","apply","arguments","_jsxs","Wrapper","children","onSubmit","e","preventDefault","target","value","alert","_jsx","type","autoComplete","autoFocus","placeholder","StyledLoader","map","_ref2","title","id","Link","state","to","concat"],"sourceRoot":""}